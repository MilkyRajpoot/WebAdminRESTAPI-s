# Generated by Django 2.1.7 on 2020-07-23 05:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('reply', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True, max_length=500, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('updateDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ_Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ans_title', models.CharField(max_length=100)),
                ('ans_solution', models.CharField(max_length=100)),
                ('teacher_id', models.CharField(max_length=100)),
                ('img_link', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Image Link1')),
                ('img_link2', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Image Link2')),
                ('img_link3', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Image Link3')),
                ('video_link', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Video Link')),
                ('link', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Link')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ_Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('que_tittle', models.CharField(max_length=100)),
                ('que_body', models.TextField(blank=True, max_length=500, null=True)),
                ('user_id', models.CharField(max_length=100)),
                ('clas', models.CharField(max_length=100)),
                ('school', models.CharField(max_length=100)),
                ('solve_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(max_length=3)),
                ('userid', models.CharField(max_length=255)),
                ('feedback', models.TextField(blank=True, max_length=500, null=True)),
                ('reply', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MCQ_Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=255)),
                ('clas', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('question', models.TextField(max_length=500)),
                ('answer', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MCQ_Post',
            fields=[
                ('title', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('school', models.CharField(max_length=100)),
                ('clas', models.CharField(choices=[('PREP', 'PREP'), ('LKG', 'LKG'), ('UKG', 'UKG'), ('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V'), ('VI', 'VI'), ('VII', 'VII'), ('VIII', 'VIII'), ('IX', 'IX'), ('X', 'X'), ('XI', 'XI'), ('XII', 'XII')], max_length=30)),
                ('subject', models.CharField(choices=[('English', 'English'), ('Hindi', 'Hindi'), ('Mathematics', 'Mathematics'), ('Rhymes', 'Rhymes'), ('English Literature Book1', 'English Literature Book1'), ('English Literature Book2', 'English Literature Book2'), ('English Grammar', 'English Grammar'), ('Hindi Literature', 'Hindi Literature'), ('Hindi Grammar', 'Hindi Grammar'), ('Science', 'Science'), ('Computer', 'Computer'), ('Social Studies', 'Social Studies'), ('History', 'History'), ('Geography', 'Geography'), ('Political Science', 'Political Science'), ('Economics', 'Economics'), ('Physical Education', 'Physical Education'), ('Computer Science', 'Computer Science'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('Accountancy', 'Accountancy'), ('Business Studies', 'Business Studies'), ('Political Science', 'Political Science'), ('Psychology', 'Psychology')], max_length=255)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('date', models.DateField()),
                ('time', models.IntegerField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MCQ_Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('que_title', models.TextField(max_length=500)),
                ('choice_1', models.CharField(max_length=255)),
                ('choice_2', models.CharField(max_length=255)),
                ('choice_3', models.CharField(max_length=255)),
                ('choice_4', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('MCQPost_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Quiz_Topic', to='TeacherStu.MCQ_Post')),
            ],
        ),
        migrations.CreateModel(
            name='MCQ_Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=255)),
                ('clas', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('result', models.IntegerField()),
                ('total', models.IntegerField()),
                ('correct', models.IntegerField()),
                ('wrong', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(choices=[('ALL', 'ALL'), ('KAS', 'KAS'), ('DEO', 'DEO'), ('AND', 'AND'), ('GKP', 'GKP')], max_length=3)),
                ('news', models.TextField(max_length=500)),
                ('expiryDate', models.DateField(blank=True, null=True)),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('modify_at', models.DateTimeField(auto_now=True)),
                ('link', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Image Link')),
            ],
            options={
                'ordering': ('addDate',),
            },
        ),
        migrations.CreateModel(
            name='Stu_Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(max_length=3)),
                ('clas', models.CharField(choices=[('PREP', 'PREP'), ('LKG', 'LKG'), ('UKG', 'UKG'), ('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V'), ('VI', 'VI'), ('VII', 'VII'), ('VIII', 'VIII'), ('IX', 'IX'), ('X', 'X'), ('XI', 'XI'), ('XII', 'XII')], max_length=30)),
                ('subject', models.CharField(choices=[('English', 'English'), ('Hindi', 'Hindi'), ('Mathematics', 'Mathematics'), ('Rhymes', 'Rhymes'), ('English Literature Book1 ', 'English Literature Book1 '), ('English Literature Book2', 'English Literature Book2'), ('English Grammar', 'English Grammar'), ('Hindi Literature', 'Hindi Literature'), ('Hindi Grammar', 'Hindi Grammar'), ('Science', 'Science'), ('Computer', 'Computer'), ('Social Studies', 'Social Studies'), ('History', 'History'), ('Geography', 'Geography'), ('Political Science', 'Political Science'), ('Economics', 'Economics'), ('Physical Education', 'Physical Education'), ('Computer Science', 'Computer Science'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('Accountancy', 'Accountancy'), ('Business Studies', 'Business Studies'), ('Political Science', 'Political Science'), ('Psychology', 'Psychology')], max_length=255)),
                ('date', models.DateField()),
                ('video', models.CharField(max_length=255)),
                ('textbook', models.CharField(max_length=255)),
                ('Notes', models.TextField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('fatherName', models.CharField(blank=True, max_length=255, null=True)),
                ('clas', models.CharField(blank=True, choices=[('PREP', 'PREP'), ('LKG', 'LKG'), ('UKG', 'UKG'), ('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V'), ('VI', 'VI'), ('VII', 'VII'), ('VIII', 'VIII'), ('IX', 'IX'), ('X', 'X'), ('XI', 'XI'), ('XII', 'XII')], max_length=30, null=True)),
                ('section', models.CharField(blank=True, max_length=255, null=True)),
                ('houseName', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('mobileNum', models.IntegerField(null=True)),
                ('category', models.CharField(choices=[('TEACHER', 'Teacher'), ('STUDENT', 'Student')], max_length=15)),
                ('Enable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teach_Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(max_length=3)),
                ('clas', models.CharField(choices=[('PREP', 'PREP'), ('LKG', 'LKG'), ('UKG', 'UKG'), ('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V'), ('VI', 'VI'), ('VII', 'VII'), ('VIII', 'VIII'), ('IX', 'IX'), ('X', 'X'), ('XI', 'XI'), ('XII', 'XII')], max_length=30)),
                ('Notes', models.TextField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobileNum', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=500)),
                ('video_link', models.CharField(max_length=1000, verbose_name='Video Link')),
                ('description', models.CharField(max_length=500)),
                ('thumbnail_link', models.URLField(max_length=1000, verbose_name='Image Link')),
                ('played_time', models.TimeField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Video_Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('video_link', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Video Link')),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('updateDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='mcq_result',
            name='Studentname',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Studentname', to='TeacherStu.Student'),
        ),
        migrations.AddField(
            model_name='mcq_result',
            name='correctAnswer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CorrectAns', to='TeacherStu.MCQ_Question'),
        ),
        migrations.AddField(
            model_name='faq_answer',
            name='que_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Question_Answer', to='TeacherStu.FAQ_Question'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Video_Post', to='TeacherStu.Video_Post'),
        ),
    ]
